plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'io.fabric'
    id 'realm-android'
    id 'com.mikepenz.aboutlibraries.plugin'
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.72"
//    id 'com.getkeepsafe.dexcount'
}
//apply from: '../config/quality/quality.gradle'

repositories {
    maven { url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo' }
}

allOpen {
    annotation("com.teo.ttasks.OpenClassOnDebug")
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    ndkVersion "21.1.6352462"
    defaultConfig {
        applicationId "com.teo.ttasks"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName '0.1'
//        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
    }
    signingConfigs {
        release {
            storeFile file('keystore/release.jks')
            keyAlias 'teo baranga'
            keyPassword "$System.env.TT_KEY"
            storePassword "$System.env.TT_KEY"
        }
    }
    buildTypes {
        debug {
            manifestPlaceholders = [enableCrashReporting: "false"]
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [enableCrashReporting: "true"]
        }
    }

    flavorDimensions "env"
    productFlavors {
        // Define separate dev and prod product flavors.
        dev {
            resValue "string", "app_name", "T-Tasks Dev"
            dimension "env"
        }
        prod {
            resValue "string", "app_name", "T-Tasks"
            dimension "env"
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a'
            universalApk false
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        warningsAsErrors true
        abortOnError true // Fail early.

        disable 'GoogleAppIndexingWarning' // App does not have deep linking.
        disable 'InvalidPackage' // Okio references java.nio that does not presented in Android SDK.
    }
    packagingOptions {
        exclude 'META-INF/library-core_release.kotlin_module'
    }
    // This allows us see tests execution progress in the output on the CI.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
    }
    sourceSets {
        test.java.srcDirs += 'src/test/kotlin'
    }
    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "4g"
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith("test")) {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}

dependencies {
    def ver = [
            coroutines: '1.3.5',
            espresso  : '3.2.0',
            koin      : '2.1.5',
            retrofit  : '2.8.1',
            mockk     : '1.9.3',
    ]

    implementation 'androidx.core:core-ktx:1.2.0'
    implementation "androidx.fragment:fragment:1.2.4"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.preference:preference:1.1.1"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "com.google.android.gms:play-services-auth:18.0.0"
    implementation "com.google.android.material:material:1.1.0"
    implementation "com.google.firebase:firebase-auth:19.3.0"
    implementation "com.google.firebase:firebase-database:19.2.1"
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.3'
    implementation 'com.mikepenz:aboutlibraries:8.1.2'
    implementation "com.squareup.okhttp3:logging-interceptor:4.5.0"
    implementation "com.squareup.retrofit2:retrofit:${ver.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${ver.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${ver.retrofit}"
    implementation "io.coil-kt:coil:0.10.0"
    implementation "io.reactivex.rxjava2:rxjava:2.2.19"
    implementation "nl.littlerobots.rxlint:rxlint:1.7.5"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${ver.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${ver.coroutines}"
    implementation "org.koin:koin-android:${ver.koin}"
    implementation "org.koin:koin-androidx-scope:${ver.koin}"
    implementation "org.koin:koin-androidx-viewmodel:${ver.koin}"

    implementation(
            "androidx.annotation:annotation:1.1.0",
            "androidx.appcompat:appcompat:1.1.0",
            "androidx.cardview:cardview:1.0.0",
            'androidx.constraintlayout:constraintlayout:2.0.0-beta3',
            "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0",
            'com.androidhuman.rxfirebase2:firebase-auth:16.1.0.0',
            'com.androidhuman.rxfirebase2:firebase-auth-kotlin:16.1.0.0',
            'com.androidhuman.rxfirebase2:firebase-core:16.0.5.0',
            'com.androidhuman.rxfirebase2:firebase-database:16.0.3.0',
            'com.androidhuman.rxfirebase2:firebase-database-kotlin:16.0.3.0',
            'com.artemzin.rxjava:proguard-rules:1.3.3.0',
            "com.crashlytics.sdk.android:crashlytics:2.10.1",
            'com.evernote:android-job:1.4.2',
            'com.github.strooooke:appbarsyncedfab:v0.5',
            "com.google.android.gms:play-services-gcm:17.0.0",
            "com.jakewharton.timber:timber:4.7.1",
            'eu.davidea:flexible-adapter:5.1.0',
            'eu.davidea:flexible-adapter-databinding:1.0.0',
            "io.reactivex.rxjava2:rxandroid:2.1.1",
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${VER.kotlin}",
    )

//    debugImplementation libraries.stetho
//    debugImplementation 'com.uphyca:stetho_realm:2.1.0'

    // Dependencies for local unit tests
    testImplementation(
            "io.mockk:mockk:${ver.mockk}",
            "junit:junit:4.13",
            "org.jetbrains.kotlin:kotlin-test-junit:${VER.kotlin}",
    )
    testImplementation ('org.threeten:threetenbp:1.4.3') {
        exclude group:'com.jakewharton.threetenabp', module:'threetenabp'
    }

    androidTestImplementation(

            // Android Testing Support Library's runner and rules
            "androidx.test.ext:junit:1.1.1",
            'androidx.test:runner:1.2.0',
            'androidx.test:rules:1.2.0',

            // Espresso UI Testing dependencies.
            "androidx.test.espresso:espresso-core:${ver.espresso}",
            "androidx.test.espresso:espresso-contrib:${ver.espresso}",
            "androidx.test.espresso:espresso-intents:${ver.espresso}",
            "io.mockk:mockk-android:${ver.mockk}",
    )
}

kapt {
    javacOptions {
        // Increase the max count of errors from annotation processors.
        // Default is 100.
        option("-Xmaxerrs", 500)
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
    }
}

// Log out test results to console
tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

/*
All direct/transitive dependencies shared between your test and production APKs need to be
excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
excluding these dependencies from your test configuration will result in an dex pre-verifier error
at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
*/
configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}

// This needs to be at the bottom so that no dependency collisions are introduced
apply plugin: 'com.google.gms.google-services'
